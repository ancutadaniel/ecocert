logging:
  level:
    org:
      springframework:
        security: DEBUG


server:
  port: 8081

spring:
  datasource:
    url: jdbc:h2:file:./data/ecocert
    username: sa
    password:
    driver: org.h2.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      format_sql: true
  h2:
    console:
      enabled: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            clientId: 87571465888-7j21dotsdv761cd35pmhifmb4vfqt5me.apps.googleusercontent.com
#            clientSecret: QQG8fsgxTAmoSAFrFSaq5bbA
#            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - email
#              - profile
##          facebook:
##            clientId: 121189305185277
##            clientSecret: 42ffe5aa7379e8326387e0fe16f34132
##            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
##            scope:
##              - email
##              - public_profile
##          github:
##            clientId: d3e47fc2ddd966fa4352
##            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
##            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
##            scope:
##              - user:email
##              - read:user
##        provider:
##          facebook:
##            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
##            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
##            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C80030DD58429D2751AC1BDBBC
    tokenExpirationMillis: 86400000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris: http://localhost:3000/oauth2/redirect